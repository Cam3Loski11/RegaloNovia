---
import Header from "../components/Header.astro";
import Layout from "../layouts/Layout.astro";
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>Canciones - Mi Corazón Musical</title>
		<link
			href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
			rel="stylesheet"
		/>
		<style>
			* {
				margin: 0;
				padding: 0;
				box-sizing: border-box;
			}

			body {
				background: linear-gradient(
					135deg,
					#ffeef8 0%,
					#f8e8ff 25%,
					#ffe8f0 50%,
					#fff0f8 75%,
					#f0e8ff 100%
				);
				min-height: 100vh;
				color: #6b4c7d;
				overflow-x: hidden;
			}

			/* Elementos decorativos flotantes */
			.floating-hearts {
				position: fixed;
				width: 100%;
				height: 100%;
				pointer-events: none;
				z-index: 1;
			}

			.heart {
				position: absolute;
				color: rgba(255, 182, 193, 0.3);
				animation: float 6s ease-in-out infinite;
			}

			.heart:nth-child(1) {
				left: 10%;
				animation-delay: 0s;
				font-size: 20px;
			}
			.heart:nth-child(2) {
				left: 20%;
				animation-delay: 1s;
				font-size: 16px;
			}
			.heart:nth-child(3) {
				left: 30%;
				animation-delay: 2s;
				font-size: 24px;
			}
			.heart:nth-child(4) {
				right: 20%;
				animation-delay: 3s;
				font-size: 18px;
			}
			.heart:nth-child(5) {
				right: 10%;
				animation-delay: 4s;
				font-size: 22px;
			}

			@keyframes float {
				0%,
				100% {
					transform: translateY(0px) rotate(0deg);
					opacity: 0.3;
				}
				50% {
					transform: translateY(-20px) rotate(5deg);
					opacity: 0.6;
				}
			}

			.container {
				max-width: 1200px;
				margin: 0 auto;
				padding: 20px;
				position: relative;
				z-index: 2;
				font-family: "Poiret One", sans-serif;
			}

			.header {
				text-align: center;
				margin-bottom: 40px;
				padding: 20px 0;
			}

			.header h1 {
				font-size: 3rem;
				color: #8b5a8c;
				text-shadow: 2px 2px 4px rgba(139, 90, 140, 0.2);
				margin-bottom: 10px;
				position: relative;
				font-family: "Pacifico", cursive;
			}

			.header h1::before,
			.header h1::after {
				content: "♫";
				position: absolute;
				top: -10px;
				color: #d4a5d6;
				font-size: 2rem;
				animation: pulse 2s ease-in-out infinite alternate;
			}

			.header h1::before {
				left: -60px;
			}
			.header h1::after {
				right: -60px;
			}

			@keyframes pulse {
				from {
					opacity: 0.5;
					transform: scale(1);
				}
				to {
					opacity: 1;
					transform: scale(1.1);
				}
			}

			.subtitle {
				font-size: 1.2rem;
				color: #a57aa5;
				font-style: italic;
				font-weight: 400;
			}

			/* Reproductor principal */
			.main-player {
				background: linear-gradient(
					145deg,
					rgba(255, 255, 255, 0.9),
					rgba(255, 240, 248, 0.8)
				);
				border-radius: 25px;
				padding: 40px;
				margin-bottom: 50px;
				box-shadow: 0 20px 40px rgba(139, 90, 140, 0.15);
				backdrop-filter: blur(10px);
				border: 1px solid rgba(255, 255, 255, 0.3);
				position: relative;
				overflow: hidden;
			}

			.main-player::before {
				content: "";
				position: absolute;
				top: -50%;
				left: -50%;
				width: 200%;
				height: 200%;
				background: radial-gradient(
					circle,
					rgba(255, 182, 193, 0.1) 0%,
					transparent 70%
				);
				animation: rotate 20s linear infinite;
				pointer-events: none;
			}

			@keyframes rotate {
				from {
					transform: rotate(0deg);
				}
				to {
					transform: rotate(360deg);
				}
			}

			.album-art {
				width: 250px;
				height: 250px;
				border-radius: 50%;
				background: linear-gradient(45deg, #ff9eb5, #f8a5c2, #d4a5d6);
				margin: 0 auto 30px;
				display: flex;
				align-items: center;
				justify-content: center;
				box-shadow: 0 15px 30px rgba(139, 90, 140, 0.2);
				position: relative;
				z-index: 1;
				animation: spin 20s linear infinite;
			}

			.album-art.playing {
				animation-play-state: running;
			}

			.album-art.paused {
				animation-play-state: paused;
			}

			@keyframes spin {
				from {
					transform: rotate(0deg);
				}
				to {
					transform: rotate(360deg);
				}
			}

			.album-art i {
				font-size: 4rem;
				color: rgba(255, 255, 255, 0.9);
				text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
			}

			.song-info {
				text-align: center;
				margin-bottom: 30px;
				position: relative;
				z-index: 1;
			}

			.song-title {
				font-size: 2rem;
				color: #8b5a8c;
				margin-bottom: 10px;
				font-weight: bold;
			}

			.artist-name {
				font-size: 1.2rem;
				color: #a57aa5;
				font-style: italic;
			}

			.controls {
				display: flex;
				justify-content: center;
				align-items: center;
				gap: 20px;
				margin-bottom: 30px;
				position: relative;
				z-index: 1;
			}

			.control-btn {
				background: linear-gradient(145deg, #d4a5d6, #c494c6);
				border: none;
				width: 60px;
				height: 60px;
				border-radius: 50%;
				color: white;
				font-size: 1.5rem;
				cursor: pointer;
				transition: all 0.3s ease;
				box-shadow: 0 8px 16px rgba(139, 90, 140, 0.2);
			}

			.control-btn:hover {
				transform: translateY(-3px);
				box-shadow: 0 12px 24px rgba(139, 90, 140, 0.3);
			}

			.play-btn {
				width: 80px;
				height: 80px;
				font-size: 2rem;
				background: linear-gradient(145deg, #ff9eb5, #f8a5c2);
			}

			.progress-container {
				background: rgba(255, 255, 255, 0.5);
				height: 8px;
				border-radius: 20px;
				margin: 20px 0;
				overflow: hidden;
				position: relative;
				z-index: 1;
			}

			.progress-bar {
				background: linear-gradient(90deg, #ff9eb5, #d4a5d6);
				height: 100%;
				border-radius: 20px;
				width: 0%;
				transition: width 0.1s ease;
				position: relative;
			}

			.progress-bar::after {
				content: "";
				position: absolute;
				top: 0;
				right: 0;
				width: 10px;
				height: 100%;
				background: rgba(255, 255, 255, 0.8);
				border-radius: 50%;
				transform: translateX(50%);
			}

			.time-info {
				display: flex;
				justify-content: space-between;
				font-size: 0.9rem;
				color: #a57aa5;
				position: relative;
				z-index: 1;
			}

			/* Playlist */
			.playlist-section {
				background: linear-gradient(
					145deg,
					rgba(255, 255, 255, 0.8),
					rgba(255, 248, 252, 0.7)
				);
				border-radius: 20px;
				padding: 30px;
				box-shadow: 0 15px 30px rgba(139, 90, 140, 0.1);
				backdrop-filter: blur(5px);
				border: 1px solid rgba(255, 255, 255, 0.4);
			}

			.playlist-title {
				font-size: 2rem;
				color: #8b5a8c;
				text-align: center;
				margin-bottom: 30px;
				position: relative;
			}

			.playlist-title::before,
			.playlist-title::after {
				content: "♪";
				position: absolute;
				top: 0;
				color: #d4a5d6;
				font-size: 1.5rem;
			}

			.playlist-title::before {
				left: -30px;
			}
			.playlist-title::after {
				right: -30px;
			}

			.playlist-item {
				display: flex;
				align-items: center;
				padding: 15px;
				margin-bottom: 15px;
				background: rgba(255, 255, 255, 0.6);
				border-radius: 15px;
				cursor: pointer;
				transition: all 0.3s ease;
				border: 1px solid rgba(212, 165, 214, 0.2);
			}

			.playlist-item:hover {
				background: rgba(255, 240, 248, 0.8);
				transform: translateY(-2px);
				box-shadow: 0 8px 16px rgba(139, 90, 140, 0.15);
			}

			.playlist-item.active {
				background: linear-gradient(
					145deg,
					rgba(255, 158, 181, 0.3),
					rgba(212, 165, 214, 0.3)
				);
				border-color: #ff9eb5;
			}

			.playlist-artwork {
				width: 60px;
				height: 60px;
				border-radius: 10px;
				background: linear-gradient(45deg, #ff9eb5, #d4a5d6);
				display: flex;
				align-items: center;
				justify-content: center;
				margin-right: 15px;
				color: white;
				font-size: 1.5rem;
			}

			.playlist-info {
				flex: 1;
			}

			.playlist-song-title {
				font-weight: bold;
				color: #8b5a8c;
				margin-bottom: 5px;
			}

			.playlist-artist {
				color: #a57aa5;
				font-size: 0.9rem;
			}

			.playlist-duration {
				color: #a57aa5;
				font-size: 0.9rem;
			}

			.spotify-link {
				text-align: center;
				margin-top: 40px;
				padding: 30px;
				background: linear-gradient(
					145deg,
					rgba(30, 215, 96, 0.1),
					rgba(30, 215, 96, 0.05)
				);
				border-radius: 20px;
				border: 2px dashed rgba(30, 215, 96, 0.3);
			}

			.spotify-text {
				font-size: 1.3rem;
				color: #8b5a8c;
				margin-bottom: 20px;
				font-weight: bold;
			}

			.spotify-btn {
				display: inline-flex;
				align-items: center;
				gap: 10px;
				background: linear-gradient(145deg, #1db954, #1ed760);
				color: white;
				padding: 15px 30px;
				border-radius: 50px;
				text-decoration: none;
				font-weight: bold;
				transition: all 0.3s ease;
				box-shadow: 0 8px 16px rgba(29, 185, 84, 0.3);
			}

			.spotify-btn:hover {
				transform: translateY(-3px);
				box-shadow: 0 12px 24px rgba(29, 185, 84, 0.4);
				color: white;
			}

			/* Responsive */
			@media (max-width: 768px) {
				.container {
					padding: 15px;
				}

				.header h1 {
					font-size: 2rem;
				}

				.header h1::before,
				.header h1::after {
					display: none;
				}

				.main-player {
					padding: 25px;
				}

				.album-art {
					width: 200px;
					height: 200px;
				}

				.song-title {
					font-size: 1.5rem;
				}

				.controls {
					gap: 15px;
				}

				.control-btn {
					width: 50px;
					height: 50px;
					font-size: 1.2rem;
				}

				.play-btn {
					width: 70px;
					height: 70px;
					font-size: 1.8rem;
				}

				.playlist-item {
					flex-direction: column;
					text-align: center;
					gap: 10px;
				}

				.playlist-artwork {
					margin-right: 0;
				}
			}

			@media (max-width: 480px) {
				.header h1 {
					font-size: 1.8rem;
				}

				.album-art {
					width: 180px;
					height: 180px;
				}

				.main-player {
					padding: 20px;
				}

				.playlist-section {
					padding: 20px;
				}
			}
		</style>
	</head>
	<Layout>
		<body>
			<Header />
			<!-- Corazones flotantes -->
			<div class="floating-hearts">
				<div class="heart">💕</div>
				<div class="heart">💖</div>
				<div class="heart">💗</div>
				<div class="heart">💘</div>
				<div class="heart">💝</div>
			</div>

			<div class="container">
				<!-- Header -->
				<div class="header">
					<h1>Canciones del Corazón</h1>
					<div class="subtitle">Melodías que tocan el alma</div>
				</div>

				<!-- Reproductor Principal -->
				<div class="main-player">
					<div class="album-art paused" id="albumArt">
						<i class="fas fa-music"></i>
					</div>

					<div class="song-info">
						<div class="song-title" id="currentSong">Te Amo y Más</div>
						<div class="artist-name" id="currentArtist">Diego Luna</div>
					</div>

					<div class="controls">
						<button class="control-btn" id="prevBtn">
							<i class="fas fa-step-backward"></i>
						</button>
						<button class="control-btn play-btn" id="playBtn">
							<i class="fas fa-play"></i>
						</button>
						<button class="control-btn" id="nextBtn">
							<i class="fas fa-step-forward"></i>
						</button>
						<button class="control-btn" id="volumeBtn">
							<i class="fas fa-volume-up"></i>
						</button>
					</div>

					<div class="progress-container" id="progressContainer">
						<div class="progress-bar" id="progressBar"></div>
					</div>

					<div class="time-info">
						<span id="currentTime">0:00</span>
						<span id="duration">2:36</span>
					</div>

					<audio id="audioPlayer" preload="metadata">
						<!-- Aquí puedes agregar tus archivos de audio -->
						<source src="/audio/perfect-symphony.mp3" type="audio/mpeg" />
						Tu navegador no soporta el elemento de audio.
					</audio>
				</div>

				<!-- Playlist -->
				<div class="playlist-section">
					<h2 class="playlist-title">Próximas Canciones</h2>

					<div class="playlist-item" data-song="0">
						<div class="playlist-artwork">
							<i class="fas fa-heart"></i>
						</div>
						<div class="playlist-info">
							<div class="playlist-song-title">Promesa</div>
							<div class="playlist-artist">Eladio Carrion</div>
						</div>
						<div class="playlist-duration">3:26</div>
					</div>

					<div class="playlist-item" data-song="1">
						<div class="playlist-artwork">
							<i class="fas fa-star"></i>
						</div>
						<div class="playlist-info">
							<div class="playlist-song-title">Chachachá</div>
							<div class="playlist-artist">Jósean Log</div>
						</div>
						<div class="playlist-duration">3:36</div>
					</div>

					<div class="playlist-item" data-song="2">
						<div class="playlist-artwork">
							<i class="fas fa-moon"></i>
						</div>
						<div class="playlist-info">
							<div class="playlist-song-title">Y SI SOMOS NOVIOS？？？</div>
							<div class="playlist-artist">PARDOPARDO</div>
						</div>
						<div class="playlist-duration">2:33</div>
					</div>

					<div class="spotify-link">
						<div class="spotify-text">✨ Playlist Completa ✨</div>
						<a
							href="https://open.spotify.com/playlist/1afdXNzvT3KhlRtEnzQKLM?si=xUlnaBxuTHS0ZQFnihYALQ"
							target="_blank"
							class="spotify-btn"
						>
							<i class="fab fa-spotify"></i>
							Escuchar en Spotify
						</a>
					</div>
				</div>
			</div>

			<script>
				// Variables del reproductor
				const audioPlayer = document.getElementById("audioPlayer");
				const playBtn = document.getElementById("playBtn");
				const prevBtn = document.getElementById("prevBtn");
				const nextBtn = document.getElementById("nextBtn");
				const volumeBtn = document.getElementById("volumeBtn");
				const progressBar = document.getElementById("progressBar");
				const progressContainer = document.getElementById("progressContainer");
				const currentTimeEl = document.getElementById("currentTime");
				const durationEl = document.getElementById("duration");
				const albumArt = document.getElementById("albumArt");
				const currentSongEl = document.getElementById("currentSong");
				const currentArtistEl = document.getElementById("currentArtist");
				const playlistItems = document.querySelectorAll(".playlist-item");

				// Lista de canciones (simulada)
				const songs = [
					{
						title: "Te Amo y Más",
						artist: "Diego Luna",
						duration: "2:36",
						src: "/audio/Te Amo y Más.mp3", // Cambiar por tu archivo real
					},
					{
						title: "Promesa",
						artist: "Eladio Carrion",
						duration: "3:26",
						src: "/audio/Alex Gárgolas, Eladio Carrion - Promesa (Visualizer Oficial).mp3", // Cambiar por tu archivo real
					},
					{
						title: "Chachachá",
						artist: "Jósean Log",
						duration: "3:36",
						src: "/audio/Jósean Log - Chachachá (Lyric Video).mp3", // Cambiar por tu archivo real
					},
					{
						title: "Y SI SOMOS NOVIOS？？？",
						artist: "PARDOPARDO",
						duration: "2:33",
						src: "/audio/Y SI SOMOS NOVIOS？？？.mp3", // Cambiar por tu archivo real
					},
				];

				let currentSongIndex = 0;
				let isPlaying = false;
				let volume = 1;

				// Función para formatear tiempo
				function formatTime(seconds) {
					const mins = Math.floor(seconds / 60);
					const secs = Math.floor(seconds % 60);
					return `${mins}:${secs.toString().padStart(2, "0")}`;
				}

				// Función para cargar canción
				function loadSong(index) {
					const song = songs[index];
					if (song && song.src) {
						audioPlayer.src = song.src;
						currentSongEl.textContent = song.title;
						currentArtistEl.textContent = song.artist;
						durationEl.textContent = song.duration;

						// Actualizar playlist visual
						playlistItems.forEach((item, i) => {
							item.classList.toggle("active", i === index);
						});
					}
				}

				// Función para reproducir/pausar
				function togglePlay() {
					if (isPlaying) {
						audioPlayer.pause();
						playBtn.innerHTML = '<i class="fas fa-play"></i>';
						albumArt.classList.remove("playing");
						albumArt.classList.add("paused");
						isPlaying = false;
					} else {
						// Si no hay src, usar una canción demo
						if (!audioPlayer.src || audioPlayer.src.includes("undefined")) {
							simulatePlayback();
						} else {
							audioPlayer.play();
						}
						playBtn.innerHTML = '<i class="fas fa-pause"></i>';
						albumArt.classList.remove("paused");
						albumArt.classList.add("playing");
						isPlaying = true;
					}
				}

				// Simulación de reproducción (para demo)
				let demoProgress = 0;
				let demoInterval;

				function simulatePlayback() {
					if (demoInterval) clearInterval(demoInterval);

					demoInterval = setInterval(() => {
						if (isPlaying) {
							demoProgress += 0.5;
							const totalSeconds = 225; // 3:45 en segundos

							if (demoProgress >= totalSeconds) {
								demoProgress = 0;
								nextSong();
								return;
							}

							const progressPercent = (demoProgress / totalSeconds) * 100;
							progressBar.style.width = progressPercent + "%";
							currentTimeEl.textContent = formatTime(demoProgress);
						}
					}, 500);
				}

				// Función para siguiente canción
				function nextSong() {
					currentSongIndex = (currentSongIndex + 1) % songs.length;
					loadSong(currentSongIndex);
					demoProgress = 0;
					if (isPlaying) {
						setTimeout(togglePlay, 100);
					}
				}

				// Función para canción anterior
				function prevSong() {
					currentSongIndex =
						currentSongIndex === 0 ? songs.length - 1 : currentSongIndex - 1;
					loadSong(currentSongIndex);
					demoProgress = 0;
					if (isPlaying) {
						setTimeout(togglePlay, 100);
					}
				}

				// Función para alternar volumen
				function toggleVolume() {
					if (volume > 0) {
						volume = 0;
						volumeBtn.innerHTML = '<i class="fas fa-volume-mute"></i>';
						audioPlayer.volume = 0;
					} else {
						volume = 1;
						volumeBtn.innerHTML = '<i class="fas fa-volume-up"></i>';
						audioPlayer.volume = 1;
					}
				}

				// Event listeners
				playBtn.addEventListener("click", togglePlay);
				nextBtn.addEventListener("click", nextSong);
				prevBtn.addEventListener("click", prevSong);
				volumeBtn.addEventListener("click", toggleVolume);

				// Barra de progreso
				progressContainer.addEventListener("click", (e) => {
					const clickX = e.offsetX;
					const width = progressContainer.offsetWidth;
					const newTime = (clickX / width) * 225; // 225 segundos = 3:45
					demoProgress = newTime;
					if (audioPlayer.duration) {
						audioPlayer.currentTime = (clickX / width) * audioPlayer.duration;
					}
				});

				// Playlist items
				playlistItems.forEach((item, index) => {
					item.addEventListener("click", () => {
						currentSongIndex = index;
						loadSong(currentSongIndex);
						demoProgress = 0;
						if (isPlaying) {
							setTimeout(togglePlay, 100);
						} else {
							togglePlay();
						}
					});
				});

				// Eventos del audio player
				audioPlayer.addEventListener("loadedmetadata", () => {
					durationEl.textContent = formatTime(audioPlayer.duration);
				});

				audioPlayer.addEventListener("timeupdate", () => {
					if (audioPlayer.duration) {
						const progress =
							(audioPlayer.currentTime / audioPlayer.duration) * 100;
						progressBar.style.width = progress + "%";
						currentTimeEl.textContent = formatTime(audioPlayer.currentTime);
					}
				});

				audioPlayer.addEventListener("ended", nextSong);

				// Cargar primera canción
				loadSong(0);

				// Animación de corazones flotantes
				function createFloatingHeart() {
					const heart = document.createElement("div");
					heart.innerHTML = "💕";
					heart.style.position = "fixed";
					heart.style.left = Math.random() * 100 + "%";
					heart.style.top = "100%";
					heart.style.fontSize = Math.random() * 10 + 15 + "px";
					heart.style.color = `rgba(255, 182, 193, ${Math.random() * 0.5 + 0.2})`;
					heart.style.pointerEvents = "none";
					heart.style.zIndex = "1";
					heart.style.animation = `floatUp ${Math.random() * 3 + 4}s linear forwards`;

					document.body.appendChild(heart);

					setTimeout(() => {
						heart.remove();
					}, 7000);
				}

				// Crear corazones periódicamente
				setInterval(createFloatingHeart, 3000);

				// CSS para animación de corazones flotantes
				const style = document.createElement("style");
				style.textContent = `
            @keyframes floatUp {
                to {
                    transform: translateY(-100vh) rotate(360deg);
                    opacity: 0;
                }
            }
        `;
				document.head.appendChild(style);
			</script>
		</body>
	</Layout>
</html>
